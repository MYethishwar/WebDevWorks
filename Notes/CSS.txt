======== Cascading Style Sheets(CSS) =========

There are Three ways to add CSS to Html code
1, Inline --> Targeted to single element

<h1 style="color: blue;">Style Me in Blue!</h1>

2, Internal --> Targeted to Single Web page

  <style>
    h1 {
      color: red;
    }
  </style>

3, ExternaL --> Targeted to Multipage Websites

 <link rel="stylesheet" href="./style.css" />
style.css: html { 
		  color:blue;
                 }

--------------- CSS Selectors ----------------

1, Element selector:-  Target elements based on their html tag elements.

p {
    color: blue;
}

2, Class selector:- Target elements based on the value of the class element.

.highlight {
    background-color: yellow;
}

3, ID selector:- Target elements based on the value of the id attribute 

#header {
    font-size: 24px;
}

4, Attribute selector:- Target elements based on their attributes and values.

input[type="text"] {
    border: 1px solid black;
}

5, Universal selector:- targets all elements.

* {
  properties here
    }


------------------- Font Properties ------------------------
1,Font Size:- 
	1px = 1/96th of inch
	1pt = 1/72th of inch	
	1em = 100% of parent (head element)
	1rem = 100% of Root parent (html element) 
2,Font weight:- 
	normal
	bold
	lighter
	bolder
	any number(100 - 900)
*3,Font Family:-
	The general font family which is used is sans-serif or serif preceeding with helvetica
4,Text align:-
	center 
	right	
	left

------------------ Inspecting CSS file in browser -------------------------
----> Command that allows you to  directly open CSS code:- (Ctrl + Shift + I)
-> Click on the Three dots located at the right cornor.
-> Inside that there is a option called more tools Click.
-> Here we see option called Developer Tools.
We can also use by clicking directly right click ->  inspect.

------------------------- The CSS Box model --------------------------------------
1, border:- border: size style color;
	border-left, border-right, border-top, border-bottom.
2, margin:- size;
3, padding:- size;

Note:- We can also write like this for all box models  [border size of top size of right size of bottom size of left(clock wise direction]


------------------------- CSS cascade -----------------------------

-> Cascade means nothing but a waterfall if we assign a property for an element twice or trice which one is considered first and which one is next that is cascade
---> It is determined by four parts:
1, Poistion:
	li {
	‚û°Ô∏ècolor:blue;
	‚û°Ô∏ècolor:red;  <--- Considered and applied.
2,Specificity:
	‚û°Ô∏èelement selector
	‚û°Ô∏èClass selector
	‚û°Ô∏èAttribute Selector
	‚û°Ô∏èId selector  <--- Considered and applied.
3,Type:
	‚û°Ô∏èExternal
	‚û°Ô∏èInternal
	‚û°Ô∏èInline  <--- Considered and applied.
4,Importance:
	‚û°Ô∏ècolor: red;
	‚û°Ô∏ècolor: blue !important;   <--- This key word makes this line to be considered no matter if the other types are come ahead.

------------------------- Combine CSS Selectors ----------------------------
1, Group: selector, selector   (We can select group of classes or Id selectors or element selectors at a time)
2, Child: selector > selector (The child selector targets elements that are direct children of a specified parent element.)
3, Descendent: selector selector   (The descendant selector targets elements that are descendants (children, grandchildren, etc.) of a specified parent element, regardless of how deep they are nested.)
4, Chaining: selectorselector   ( To select more accurate constraints.)
5, Combining combiners: selector selctorselector    (It is like a hybrid selector)

------------------------- CSS Positioning -------------------------------
1,Static: Default position 
2,Relative: Position  which is displaced from the static position.
3,absolute: Position relative to nearest positions ancestor.(By default Left cornor).
*Z-index :- Imagine 3D graph where we can mention depth of the containers here.
4,Fixed: Relative to the top left cornor of the browser window.(Even if we scorll up and down it is not going to move it's place.

https://diana-adrianne.com/purecss-lace/  (A beautiful picture which is done using only css).

------------------------ CSS Display --------------------------------------
There are three main different values for display property ...
Syntax: display: block or inline or block-inline.
1, Block  <---- Which takes all line of the web page and we can specify height and width.
2, Inline <---- Takes up as much space as necessary as per the content inside.
3, Inline-block  <---- combination of first two.(It means the block Don't start in the new line)

------------------------- CSS Float -----------------------------------------
It is a property which makes image to stick right or left side of the web page.
-> This is used when we want a paragraph surrounded by a image on the right side and also below of that image.
CSS clear property :- It is used to clear the contents what ever is present in the left or right or both. Example:- arranging footer at the bottom of the webpage.

	
------------------- How to create responsive websites ----------------------
Responsive Website:- Organize the web in any type of screen sizes like Tablet, Laptop, Mobile Phone.
To make our website responsive we have 4 techniques or type
1, Media queries
2, CSS grid
3, CSS Flexbox
4, External Frameworks Eg. Bootstrap

------------------------- Media Queries(@media) ------------------------------
Syntax:
@media (max-width: 600px) and (min-width: 200px){
	#Screens which is visible when the above condition gets satisfied.
}
‚û°Ô∏è We can use multiple media queries in one web page.	
‚û°Ô∏è object-fit: cover; (image or video is fully occupied in  a container extra part is wiped out)	

------------------------- Flex Box ---------------------------------
üòäFlex display:- by declaring display = flex in a container it makes all the blocks in the container in a row systematically
üòäFlex Direction:- by default the flex items are organized in a row(left to right) but in order to make it column wise(top to bottom) we declare value as a column.
‚ù§Ô∏èFlex-basis:- It is like a height of a flex element in case of flex-direction is row, it will control width. In case of flex-column it will control height.
-------------------------- üòäFlex-Layoutüòä --------------------------
‚ù§Ô∏èorder:- By default the order of each child flex item is 0 so based on the number it is placed accordingly.it is like indexing the flex elements wherever we want.
‚ù§Ô∏èFlex-wrap:- When the child items exceeds the page then if we declare flex-wrap to wrap then it directs bottom in the web page.
‚ù§Ô∏èJustify-content:- 
	- flex-start (aligns at the start)
	- center (aligns at the center)
	- flex-end (aligns at the end)
	- space between (generates space between the items ignoring around)
	- space around (occupies off space at the start and the end)
	- space evenly (occupies equal space between items)
‚ù§Ô∏èalign-items:- 
	mention viewport height under the align-items property to apply these rules. 
	- flex-start
	- flex-end
	- baseline
	- center
	- stretch
-> align-self:- is used to modify the child item either to align start, end or center...
‚ù§Ô∏èalign-content- alignment of the wrapped items.
üòäFlex-sizing:- 

------------------------------- GRID -----------------------------------------
